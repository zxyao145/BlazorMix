@inject ToastService ToastService

<DemoBlock Title="基础用法">
    <Swiper>
        @for (int i = 0; i < _colors.Length; i++)
        {
            var index = i;
            <SwiperItem>
                <div style="@($"{ContentStyle} background: {_colors[index]};")"
                     @onclick="@(() => { _ = ToastService.Show($"你点击了卡片 {index + 1}"); })">
                    @(index + 1)
                </div>
            </SwiperItem>
        }
    </Swiper>
</DemoBlock>

<DemoBlock Title="自动播放">
    <Swiper Autoplay>
        @for (int i = 0; i < _colors.Length; i++)
        {
            var index = i;
            <SwiperItem>
                <div style="@($"{ContentStyle} background: {_colors[index]};")"
                 @onclick="@(() => { _ = ToastService.Show($"你点击了卡片 {index + 1}"); })">
                    @(index + 1)
                </div>
            </SwiperItem>
        }
    </Swiper>
</DemoBlock>

<DemoBlock Title="循环">
    <Swiper Loop Autoplay>
        @for (int i = 0; i < _colors.Length; i++)
        {
            var index = i;
            <SwiperItem>
                <div style="@($"{ContentStyle} background: {_colors[index]};")"
                     @onclick="@(() => { _ = ToastService.Show($"你点击了卡片 {index + 1}"); })">
                    @(index + 1)
                </div>
            </SwiperItem>
        }
    </Swiper>
</DemoBlock>

<DemoBlock Title="手动控制">
    <Swiper @ref="@_swiper" AllowTouchMove="@false">
        @for (int i = 0; i < _colors.Length; i++)
        {
            var index = i;
            <SwiperItem>
                <div style="@($"{ContentStyle} background: {_colors[index]};")"
                     @onclick="@(() => { _ = ToastService.Show($"你点击了卡片 {index + 1}"); })">
                    @(index + 1)
                </div>
            </SwiperItem>
        }
    </Swiper>
    <Space>
        <SpaceItem>
            <Button OnClick="@(()=> _swiper?.SwipePrev())">
                上一张
            </Button>
        </SpaceItem>
        <SpaceItem>
            <Button OnClick="@(()=> _swiper?.SwipeNext())">
                下一张
            </Button>
        </SpaceItem>
    </Space>

    <DemoDescription>
        在禁用手势拖拽后，可以通过 Ref 进行手动翻页
    </DemoDescription>
</DemoBlock>



<DemoBlock Title="自定义样式">
    <Swiper Style="@("--border-radius:8px;")" DefaultIndex="3" Loop>
        @for (int i = 0; i < _colors.Length; i++)
        {
            var index = i;
            <SwiperItem>
                <div style="@($"{ContentStyle} background: {_colors[index]};")"
                     @onclick="@(() => { _ = ToastService.Show($"你点击了卡片 {index + 1}"); })">
                    @(index + 1)
                </div>
            </SwiperItem>
        }
    </Swiper>
    <DemoDescription>
        通过 CSS 变量可以控制整体的圆角等样式
    </DemoDescription>
</DemoBlock>

@code
{
    private Swiper? _swiper;
    const string ContentStyle = "height:120px; color:#fff; font-size: 48px;display: flex;justify-content: center;align-items: center;user-select: none;";
    string[] _colors = new[]
    {
        "#ace0ff", "#bcffbd", "#e4fabd", "#ffcfac"
    };

}
